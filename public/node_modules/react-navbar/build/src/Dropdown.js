'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactIntl = require('react-intl');

var _Item = require('./Item');

var _Item2 = _interopRequireDefault(_Item);

exports['default'] = _react2['default'].createClass({
    displayName: 'Dropdown',

    propTypes: {
        title: _react2['default'].PropTypes.string.isRequired,
        items: _react2['default'].PropTypes.array.isRequired
    },

    mixins: [_reactIntl.IntlMixin],

    render: function render() {
        var items = this.props.items.map(function (item, index) {
            var ref = 'i' + index;
            return _react2['default'].createElement(_Item2['default'], _extends({}, item, { ref: ref, key: ref }));
        });

        return _react2['default'].createElement(
            'li',
            { className: 'dropdown' },
            _react2['default'].createElement(
                'a',
                { href: '#', className: 'dropdown-toggle', 'data-toggle': 'dropdown', role: 'button', 'aria-haspopup': 'true', 'aria-expanded': 'false' },
                this.getIntlMessage(this.props.title),
                _react2['default'].createElement('span', { className: 'caret' })
            ),
            _react2['default'].createElement(
                'ul',
                { className: 'dropdown-menu' },
                items
            )
        );
    }
});
module.exports = exports['default'];